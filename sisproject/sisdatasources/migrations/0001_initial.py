# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-11-20 12:24
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016)], default=2016, verbose_name='Academic Year')),
                ('semester', models.CharField(choices=[('1st SEMESTER', '1st SEMESTER'), ('2nd SEMESTER', '2nd SEMESTER')], default=' ', max_length=30, verbose_name='Semester')),
                ('isactive', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default=' ', max_length=30, verbose_name='Is Active')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MONDAY', 'MONDAY'), ('TUESDAY', 'TUESDAY'), ('WEDNESDAY', 'WEDNESDAY')], default=' ', max_length=30, verbose_name='Days')),
                ('classTime', models.DateTimeField(blank=True, null=True, verbose_name='Class Time')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], default=' ', max_length=30, verbose_name='Class')),
                ('totalNumberOfStudents', models.IntegerField(verbose_name='Total Number of Students')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentID', models.CharField(blank=True, default='', max_length=30, verbose_name='Parent ID')),
                ('lastName', models.CharField(max_length=30, verbose_name='Last Name')),
                ('middleName', models.CharField(blank=True, max_length=30, null=True, verbose_name='Middle Name')),
                ('firstName', models.CharField(max_length=30, verbose_name='First Name')),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], default=' ', max_length=30, verbose_name='Gender')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('phone_number', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('nationality', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nationality')),
                ('occupation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Occupation')),
                ('entity_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Entity')),
                ('entity_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Entity Address')),
                ('salary_range', models.IntegerField(blank=True, null=True, verbose_name='Salary Range')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('modified', models.DateTimeField(auto_now_add=True, verbose_name='Date Modified')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReceiptNo', models.CharField(blank=True, default='', max_length=30, verbose_name='Receipt Number')),
                ('digitalSignature', models.CharField(blank=True, max_length=255, null=True, verbose_name='Digital Signature')),
                ('totalyearlyfee', models.IntegerField(blank=True, null=True, verbose_name='Total Yearly Fee')),
                ('totalfirstsemesterfee', models.IntegerField(blank=True, null=True, verbose_name='Total First Semester Fee')),
                ('totalsecondsemesterfee', models.IntegerField(verbose_name='Total Second Semester Fee')),
                ('firstpayment', models.IntegerField(blank=True, default=0, null=True, verbose_name='First Payment')),
                ('secondpayment', models.IntegerField(blank=True, default=0, null=True, verbose_name='Second Payment')),
                ('totalfirstsemesterpayment', models.IntegerField(verbose_name='Total First Semester Payment')),
                ('firstsemesterbalance', models.IntegerField(verbose_name='First Semester Balance')),
                ('thirdpayment', models.IntegerField(blank=True, default=0, null=True, verbose_name='Third Payment')),
                ('fourthpayment', models.IntegerField(blank=True, default=0, null=True, verbose_name='Fourth Payment')),
                ('totalsecondsemesterpayment', models.IntegerField(verbose_name='Total First Semester Payment')),
                ('secondsemesterbalance', models.IntegerField(verbose_name='Second Semester Balance')),
                ('totalyearlypayment', models.IntegerField(verbose_name='Total Yearly Payment')),
                ('totalyearlybalance', models.IntegerField(verbose_name='Total Yearly Balance')),
                ('transaction_Date', models.DateField(auto_now=True, null=True, verbose_name='Date of Transaction')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountnumber', models.CharField(max_length=255, verbose_name='Account Number')),
                ('grossmonthlysalary', models.IntegerField(verbose_name='Monthly Salary')),
                ('contractperiod', models.IntegerField(verbose_name='Contract Period')),
                ('grossannualsalary', models.IntegerField(verbose_name='Gross Annual Salary')),
                ('monthlyincometax', models.IntegerField(verbose_name='Monthly Income Tax')),
                ('netmonthlysalary', models.IntegerField(verbose_name='Net Monthly Salary')),
                ('month', models.CharField(choices=[('JANUARY', 'JANUARY'), ('FEBRUARY', 'FEBRUARY'), ('MARCH', 'MARCH'), ('APRIL', 'APRIL'), ('MAY', 'MAY'), ('JUNE', 'JUNE'), ('JULY', 'JULY'), ('AUGUST', 'AUGUST'), ('SEPTEMBER', 'SEPTEMBER'), ('OCTOBER', 'OCTOBER'), ('NOVEMBER', 'NOVEMBER'), ('DECEMBER', 'DECEMBER')], default=' ', max_length=30, verbose_name='Month Paid For')),
                ('salaryDate', models.DateField(auto_now=True, null=True, verbose_name='Paid Date')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastName', models.CharField(max_length=30, verbose_name='Last Name')),
                ('middleName', models.CharField(blank=True, max_length=30, null=True, verbose_name='Middle Name')),
                ('firstName', models.CharField(max_length=30, verbose_name='First Name')),
                ('grade', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], default=' ', max_length=30, verbose_name='Class')),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], default=' ', max_length=30, verbose_name='Gender')),
                ('phone_number', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('city', models.CharField(max_length=30, verbose_name='City')),
                ('county', models.CharField(choices=[('BOMI', 'BOMI'), ('BONG', 'BONG'), ('GBARPOLU', 'GBARPOLU'), ('GRAND BASSA', 'GRAND BASSA'), ('GRAND GEDEH', 'GRAND GEDEH'), ('GRAND KRU', 'GRAND KRU'), ('GRAND CAPE MOUNT', 'GRAND CAPE MOUNT'), ('MARGIBI', 'MARGIBI'), ('MARYLAND', 'MARYLAND'), ('MONTSERRADO', 'MONTSERRADO'), ('NIMBA', 'NIMBA'), ('LOFA', 'LOFA'), ('RIVERCESS', 'RIVERCESS'), ('RIVERGEE', 'RIVERGEE'), ('SINOE', 'SINOE')], default=None, max_length=30, verbose_name='County')),
                ('nationality', models.CharField(max_length=30, verbose_name='Nationality')),
                ('dateOfBirth', models.DateField(max_length=30, verbose_name='Date of Birth')),
                ('placeOfBirth', models.CharField(max_length=255, verbose_name='Place of Birth')),
                ('regDate', models.DateField(max_length=30, verbose_name='Registration Date')),
                ('country', models.CharField(max_length=255, verbose_name='Country')),
                ('emergency', models.CharField(blank=True, max_length=255, null=True, verbose_name='Emergency Contact')),
                ('emergency_phone', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone (Emergency Contact)')),
                ('transcript', models.FileField(blank=True, max_length=255, null=True, upload_to=b'', verbose_name='Transcript')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('modified', models.DateTimeField(auto_now_add=True, verbose_name='Date Modified')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staffID', models.CharField(blank=True, default='', max_length=30, verbose_name='Staff ID')),
                ('staff_photo', models.FileField(max_length=255, upload_to=b'', verbose_name='Teacher Picture')),
                ('lastName', models.CharField(max_length=30, verbose_name='Last Name')),
                ('middleName', models.CharField(blank=True, max_length=30, null=True, verbose_name='Middle Name')),
                ('firstName', models.CharField(max_length=30, verbose_name='First Name')),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], default=' ', max_length=30, verbose_name='Gender')),
                ('phone_number', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator(message="Phone number format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('dateOfBirth', models.DateField(max_length=30, verbose_name='Date of Birth')),
                ('placeOfBirth', models.CharField(max_length=255, verbose_name='Place of Birth')),
                ('nationality', models.CharField(max_length=255, verbose_name='Nationality')),
                ('numberOfSubject', models.IntegerField(verbose_name='Number of Subject Teaching')),
                ('qualification', models.CharField(max_length=255, verbose_name='Highest Qualification')),
                ('experience', models.CharField(max_length=255, verbose_name='Experience in years')),
                ('licence', models.CharField(max_length=255, verbose_name='Licence')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('modified', models.DateTimeField(auto_now_add=True, verbose_name='Date Modified')),
            ],
        ),
        migrations.CreateModel(
            name='Staff_Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departmentName', multiselectfield.db.fields.MultiSelectField(choices=[('TEACHER', 'TEACHER'), ('TEACHER', 'TEACHER'), ('ACCOUNTANT', 'ACCOUNTANT')], default=' ', max_length=5, verbose_name='Staff Position')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Staff')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentID', models.CharField(blank=True, default='', max_length=30, verbose_name='Student ID')),
                ('student_photo', models.FileField(max_length=255, upload_to=b'', verbose_name='Picture')),
                ('previous_school', models.CharField(max_length=255, verbose_name='Previous School Attended')),
                ('previous_school_address', models.CharField(max_length=255, verbose_name='Previous School Address')),
                ('last_year_attendance', models.DateField(max_length=30, verbose_name='Last Year of Attendance')),
                ('level', models.CharField(choices=[('ELEMENTARY', 'ELEMENTARY'), ('JUNIOR HIGH', 'JUNIOR HIGH'), ('SENIOR HIGH', 'SENIOR HIGH')], default=None, max_length=255, verbose_name='Level')),
                ('enrollment_status', models.CharField(choices=[('ENROLLED', 'ENROLLED'), ('DID NOT ENROLLED', 'DID NOT ENROLLED')], default=None, max_length=255, verbose_name='Enrollment Status')),
                ('enrollment_Date', models.DateField(max_length=30, verbose_name='Enrollment Date')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('modified', models.DateTimeField(auto_now_add=True, verbose_name='Date Modified')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Registration')),
            ],
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default=' ', max_length=30, verbose_name='Present')),
                ('absent', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default=' ', max_length=30, verbose_name='Absent')),
                ('reasonAbsent', models.TextField(blank=True, default='', max_length=255, verbose_name='Reason Absent')),
                ('absentDate', models.DateField(auto_now=True, null=True, verbose_name='Date')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Grade')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Student')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.AcademicYear')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peroid', models.CharField(choices=[('1st PERIOD', '1st PERIOD'), ('2nd PERIOD', '2nd PERIOD'), ('3rd PERIOD', '3rd PERIOD'), ('1st SEMESTER EXAM', '1st SEMESTER EXAM'), ('4th PERIOD', '4th PERIOD'), ('5th PERIOD', '5th PERIOD'), ('6th PERIOD', '6th PERIOD'), ('2nd SEMESTER EXAM', '2nd SEMESTER EXAM')], default=' ', max_length=30, verbose_name='Period Test')),
                ('gradeScore', models.CharField(blank=True, default='', max_length=30, verbose_name='Grade Scored')),
                ('studenRank', models.CharField(blank=True, default='', max_length=30, verbose_name='Student Rank')),
                ('status', models.CharField(choices=[('PASSED', 'PASSED'), ('FAILED', 'FAILED')], default=' ', max_length=30, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', multiselectfield.db.fields.MultiSelectField(choices=[('ENGLISH', 'ENGLISH'), ('MATH', 'MATH'), ('HISTORY', 'HISTORY')], default=' ', max_length=5, verbose_name='Subject')),
                ('created', models.DateTimeField(auto_now=True, null=True, verbose_name='Date Created')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Staff')),
            ],
        ),
        migrations.AddField(
            model_name='studentmark',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Subject'),
        ),
        migrations.AddField(
            model_name='studentmark',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.AcademicYear'),
        ),
        migrations.AddField(
            model_name='payroll',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Staff'),
        ),
        migrations.AddField(
            model_name='payment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Student'),
        ),
        migrations.AddField(
            model_name='parent',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Student'),
        ),
        migrations.AddField(
            model_name='grade',
            name='sponsor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Staff'),
        ),
        migrations.AddField(
            model_name='grade',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Student'),
        ),
        migrations.AddField(
            model_name='classschedule',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Grade'),
        ),
        migrations.AddField(
            model_name='classschedule',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Staff'),
        ),
        migrations.AddField(
            model_name='classschedule',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Subject'),
        ),
        migrations.AddField(
            model_name='classschedule',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.AcademicYear'),
        ),
        migrations.AddField(
            model_name='academicyear',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sisdatasources.Student'),
        ),
    ]
